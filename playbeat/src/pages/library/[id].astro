---
import Layout from '../../layouts/Layout.astro'
import Header from '../../components/Header.astro'
import PlayIcon from '@/icons/PlayIcon.astro'
import Heart from '@/icons/Heart.astro'
import Shuffle from '@/icons/Shuffle.astro'
import {getInfoPlaylist} from "@/utils/getInfoPlaylist"
import {TOKEN} from '@/constants.ts'
import PlaylistOpt from '@components/PlaylistOpt.astro'
import { Global } from '@/globalState/globalUrl'


const {id} = Astro.params
const token = Astro.cookies.get(TOKEN);

let playlist: any
let idImg: any
try{
    if(id !== undefined){

        playlist = await getInfoPlaylist(parseInt(id), token?.value)
        playlist = playlist.data
        idImg = playlist.imgLista

    }

}catch(e){
    console.log(e)
}

---

<Layout title='PlayBeat'>
    <Header/>
    <div class="mt-16 p-4 px-14">
        <section class="  flex flex-row ">
            <div>
                <img class=" w-60 h-60 rounded-md" src={Global.url + "foto/" + idImg}>

                </img>
                <div class="mt-8 flex flex-row justify-between items-center">
                    <button class="bg-[#6985C0] flex flex-row items-center p-1 px-3  gap-1 w-max rounded-md">
                        <PlayIcon/>
                        <span class=" font-semibold">
                            PLAY
                        </span>
                    </button>
                    <button>
                        <Heart/>
                    </button>
                    <button>
                        <Shuffle/>
                    </button>
                    <PlaylistOpt items={["Eliminar playlist","Editar playlist", "Añadir propietario"]}>                        
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="25"  height="25"  viewBox="0 0 24 24"  fill="none"  stroke="#6985C0"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-dots-vertical"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /><path d="M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /><path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /></svg>
                    </PlaylistOpt> 
                    
                </div>
            </div>
            <div class="flex flex-col ml-8 self-center gap-1">
                <span class="font-medium"></span>
                <h2 class="text-4xl font-semibold">{playlist?.nombre}</h2>
                <h2 class="text-2xl font-semibold text-[#6985C0]">
                    {playlist?.Propietarios?.map((user: any, index: any)=>{
                        if(index === playlist?.Propietarios.length - 1){
                            return '@' + user.nombreUsuario
                        }
                        return '@' + user.nombreUsuario + ", "
                    })}
                </h2>
                <span class=" opacity-70">{playlist?.descripcion}</span>
                <span>Lista de canciones | {playlist?.Audios?.length} canciones, 
                    {() => {
                        function convertirSegundos(segundos:any) {
                            let horas = Math.floor(segundos / 3600);
                            segundos %= 3600;
                            let minutos = Math.floor(segundos / 60);
                            segundos %= 60;
                            let res = ""
                            if(horas >0 ){
                                res+= horas + "h "
                            }
                            if(minutos >0 ){
                                res+= minutos + "m "
                            }
                            if(segundos >0 ){
                                res+= segundos + "s "
                            }
                            return res
                        }
                        let duracionTotalSegundos = playlist?.Audios?.reduce((acumulador:any, objeto:any) => acumulador + objeto.duracionSeg, 0);
                        return convertirSegundos(duracionTotalSegundos);
                    }}</span>
            </div>
        </section>  

        <table class="mt-8 table-auto w-full">
            <thead class="opacity-60">
                <tr class="text-left">
                    <th class="pb-2 pl-3">Canción</th>
                    <th>Artista</th>
                    <th>Álbum</th>
                    <th class="max-w-6">Duración</th>
                </tr>
            </thead>
            <tbody class="border-t-[1px] border-white border-opacity-60">
                {playlist && playlist?.Audios?.map((cancion:any) => (
                    <tr class=" hover:bg-[#323232] select-none" id={cancion.idAudio}  >
                        <td class="py-3 pl-3 flex flex-row items-center gap-3">
                            <img class=" h-12 aspect-square bg-black rounded-[4px]" src={Global.url + "foto/" + cancion.imgAudio}/>
                            {cancion.titulo}
                            </td>
                        <td class="py-3">                                
                            {cancion?.Artistas?.map((artista:any, index:any) => {
                                    if(index == cancion.Artistas.length-1){
                                        return artista.nombreUsuario
                                    }else{
                                        return artista.nombreUsario + ', '
                                    }
                                })}
                        </td>
                        <td class="py-3" >{cancion.album}</td>
                        <td class="py-3 max-w-6 ">{cancion.duracionSeg}</td>
                        <td class="max-w-3 cursor-pointer pr-3">
                            <PlaylistOpt items={["Añadir a playlist","Eliminar de la playlist", "Añadir cola"]} id={cancion.idAudio}>                        
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-dots" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="#6985C0" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /><path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /><path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" /></svg>
                            </PlaylistOpt> 
                        </td>
                    </tr>
                ))
                }
            </tbody>
        </table>
    </div>
</Layout>


<script is:inline>
    document.addEventListener('astro:page-load', () => {
        const canciones = Array.from(document.querySelectorAll('tr')).slice(1)
        canciones.forEach((cancion, key) => {
            cancion.addEventListener("dblclick", () => {
                // localStorage.setItem("playlist", canciones.id)
                const hijos = canciones.map(cancion => cancion.children);
                const playlist = hijos.map(hijo => {
                    return {
                        id: hijo[0].parentElement.id,
                        titulo: hijo[0].innerText,
                        artista: hijo[1].innerText,
                        duracion: hijo[3].innerText
                    }
                })
                const pl = {
                    ind: key,
                    canciones: playlist
                }
                localStorage.setItem("playlist", JSON.stringify(pl))
                localStorage.setItem("cancion", cancion.id)
                console.log("envio Playsong")
                var event = new Event("playSong");
                document.dispatchEvent(event);
                var event = new Event("playlistChange");
                window.dispatchEvent(event);
            })
    })
    })
</script>

