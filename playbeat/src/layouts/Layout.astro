---
import Library from '@/components/LeftBar.astro';
import Queue from '@/components/RightBar.astro';
import {Player} from '@/components/Player';
// import Library from '../components/LeftBar.astro';
// import Queue from '../components/RightBar.astro';
// import {Player} from '../components/Player';
import { ViewTransitions } from 'astro:transitions';
import List from '@/icons/List.astro'

interface Props {
	title: string;
}

const { title } = Astro.props;

const jws = Astro.cookies.get('token');

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="PlayBeat" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logo_blanco.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions/>
	</head>
	<body>
		<div id="app" class="relative min-h-screen " >
			<aside class="[grid-area:aside1] ">
				<Library />
			</aside>
			<main class="[grid-area:main] overflow-y-scroll ">
				<slot />
		  	</main>
			<aside class="[grid-area:aside2]">
				<Queue/>
			</aside>

			<footer class="[grid-area:player] h-[72px]">
				<Player jws={jws?.value} client:only="react" transition:name="media-player" transition:persist>
					<div class="">
						<List/>
					</div>
				</Player>
			</footer>
		</div>
	</body>
	
</html>
<script is:inline>
	const funcion = () => {
		let isClicked = localStorage.getItem('isClicked') === 'true';
		const queue = document.querySelector('.queue') ;

		const songOpt = document.querySelectorAll('.noScroll');
		if(queue){
			queue.addEventListener('click', () => {

				const app = document.querySelector('#app') ;
				const header = document.querySelector('.header') ;
				isClicked = !isClicked;
				localStorage.setItem('isClicked', isClicked.toString());
				queue.style.color = isClicked ? "#6985C0" : "white";
				queue.style.backgroundColor = isClicked ? "#606060a4" : "";
				app.style.gridTemplateColumns = isClicked ? "1fr repeat(4, 1fr) 1fr" : "1fr repeat(3, 1fr) 2fr 0px";
				header.style.width = isClicked ? "66.667%" : "83.333%";
				songOpt.forEach((opt) => {
					opt.style.width = isClicked ? "66.6vw" : "83.3vw";
				});
				window.dispatchEvent(new Event('storageChange'));
				
			});
		}
	}
	setTimeout(funcion, 1500);
	document.addEventListener('astro:page-load', () => {
		setTimeout(funcion, 1500);
		setTimeout( () => {

		
			let isClicked = localStorage.getItem('isClicked') === 'true';

		const queue = document.querySelector('.queue');
		const songOpt = document.querySelectorAll('.noScroll');
		if(queue){
				const app = document.querySelector('#app');
				const header = document.querySelector('.header');
				queue.style.color = isClicked ? "#6985C0" : "white";
				queue.style.backgroundColor = isClicked ? "#606060a4" : "";
				app.style.gridTemplateColumns = isClicked ? "1fr repeat(4, 1fr) 1fr" : "1fr repeat(3, 1fr) 2fr 0px";
				header.style.width = isClicked ? "66.667%" : "83.333%";
				songOpt.forEach((opt) => {
					opt.style.width = isClicked ? "66.6vw" : "83.3vw";
				});
				window.dispatchEvent(new Event('storageChange'));
			}
		}, 1500);

	})
	document.addEventListener('astro:after-swap', () => {
		funcion()
		let isClicked = localStorage.getItem('isClicked') === 'true';

		const queue = document.querySelector('.queue');
		const songOpt = document.querySelectorAll('.noScroll');
		if(queue){
				const app = document.querySelector('#app');
				const header = document.querySelector('.header');
				queue.style.color = isClicked ? "#6985C0" : "white";
				queue.style.backgroundColor = isClicked ? "#606060a4" : "";
				app.style.gridTemplateColumns = isClicked ? "1fr repeat(4, 1fr) 1fr" : "1fr repeat(3, 1fr) 2fr 0px";
				header.style.width = isClicked ? "66.667%" : "83.333%";
				songOpt.forEach((opt) => {
					opt.style.width = isClicked ? "66.6vw" : "83.3vw";
				});
				window.dispatchEvent(new Event('storageChange'));

		}
	});

</script>
<script is:inline>

	document.addEventListener('astro:page-load', () => {
		const boton = document.querySelectorAll('.button');
		const dropdown = document.querySelectorAll('.dropdown');
		const noScroll = document.querySelectorAll('.noScroll');
		for(let i = 0; i < boton.length; i++) {
			boton[i].addEventListener('focus', () => {
				const rect = boton[i].getBoundingClientRect();
				const noScrollRect = noScroll[i].getBoundingClientRect();
				const dropdownRect = dropdown[i].getBoundingClientRect();
				if( noScrollRect.left + noScrollRect.width - rect.left <200){
					dropdown[i].style.left = `${rect.left-190}px`;
				}else{
					dropdown[i].style.left = `${rect.left+ 30}px`;
				}
				if( noScrollRect.top + noScrollRect.height - rect.top -72 < dropdownRect.height ){
					dropdown[i].style.top = `${rect.top+10-dropdownRect.height}px`;
				}else{
					dropdown[i].style.top = `${rect.top + 30}px`;
				}


			 })
		}
	});

		


  
</script>
	<script is:inline>
		document.addEventListener('astro:page-load', () => {
			const botonesizqder = document.querySelectorAll('.botonesizq, .botonesder, .dropdown');
			botonesizqder.forEach(div => {
				div.addEventListener('click', (e) => {
					e.preventDefault();
					
				});
			});

		});


	  </script>
<script>
		// setTimeout( () => {
		// 	const loop = document.querySelector('.loop');
		// 	loop.addEventListener('click', () => {

		// 	})
		// })
		function getCookie(name: any) {
			let cookieArr = document.cookie.split("; ");
			
			for(let i = 0; i < cookieArr.length; i++) {
				let cookiePair = cookieArr[i].split("=");
				
				if(name == cookiePair[0]) {
					return decodeURIComponent(cookiePair[1]);
				}
			}
		}
		function nextSongFunction(){
				const queue = JSON.parse(localStorage.getItem("songsQueue") || "[]")
				if(queue != null && queue.length != 0){
					window.dispatchEvent(new Event('nextSong'));
							setTimeout(()=> {
								window.dispatchEvent(new Event('historialChange'))
							}, 5000)		
				}else{
					let playlist = JSON.parse(localStorage.getItem("playlistQueue") || "[]")
					const loop = JSON.parse(localStorage.getItem('loop') || "false")
					if(loop || (playlist != null && playlist.length != 0)){
						window.dispatchEvent(new Event('nextSongPlaylist'));
							setTimeout(()=> {
								window.dispatchEvent(new Event('historialChange'))
							}, 5000)		
					}else{
						const token = getCookie('token');
						// document.dispatchEvent(new Event('stopSong'))
						
						fetch('https://playbeat.uksouth.cloudapp.azure.com/etiquetas/infinite/10/10', {
						method: 'GET',
						headers: {
							'Content-Type': 'application/json',
							'Authorization': `Bearer ${token}` // Uncomment this line if you need to send a bearer token
						},
						})
						.then((data) => data.json())
						.then((data) => {
							console.log("data" + data)
							const lista = data.map((song: any) => {
								return {id: song.idAudio, titulo: song.titulo, duracionSeg: song.duracionSeg}
							})
							localStorage.setItem('playlist', JSON.stringify(lista))
							localStorage.setItem('playlistQueue', JSON.stringify(lista))
							window.dispatchEvent(new Event('playlistChange'));
							setTimeout(() => {
									window.dispatchEvent(new Event('nextSongPlaylist'));
									setTimeout(()=> {
										window.dispatchEvent(new Event('historialChange'))
									}, 5000)		
							}, 200)
						})
						.catch((error) => {
							console.error('Error:', error);
						});
					}

				}
		}
		
		document.addEventListener('astro:page-load', () => {
			setTimeout( () => {
			const previousSong = document.querySelector('.previousSong');
			previousSong?.addEventListener('click', () => {
				console.log("envioEvento")
				window.dispatchEvent(new Event('previousSong'));
			});
		}, 2000)
		
		setTimeout(	() => {	
			const nextSong = document.querySelector('.nextSong');
			nextSong?.addEventListener('click', () => {
				nextSongFunction()
}			)}, 2000);
		setTimeout(	() => {	
			const audioPlayer = document.getElementById('audioPlayer');
			audioPlayer?.addEventListener('ended', () => {
				nextSongFunction()
			});
		}, 2000);
		
		const buton = document.querySelectorAll('.button') as NodeListOf<HTMLElement>;
		const itemsOpt = document.querySelectorAll('.dropdown span');
		for(let i = 0; i < itemsOpt.length; i++){
			itemsOpt[i].addEventListener('mousedown', (e) => {
			e.preventDefault()
			})
			if((itemsOpt[i] as HTMLElement).innerText === "AÃ±adir cola"){
				itemsOpt[i].addEventListener('click', () => {

					let songsQueue = JSON.parse(localStorage.getItem('songsQueue') || "null");
					if(songsQueue === null){
						songsQueue = []
					}
					const td = itemsOpt[i]?.parentNode?.parentNode?.parentNode?.parentNode as HTMLElement;
					const obj = {id: td.id, titulo: (td.children[0] as HTMLElement).innerText, duracionSeg: (td.children[2] as HTMLElement).innerText};
					songsQueue.push(obj);

					localStorage.setItem('songsQueue', JSON.stringify(songsQueue));
					for(let j= 0; j<buton.length; j++){
						buton[j].blur()
					}
					window.dispatchEvent(new Event('storageChange'));
				})
			}
		
		}
	
	});
	
  
  </script>
<style>
	
	#app {
	  display: grid;
	  grid-template-areas:
		"aside1 main main main main aside2"
		"player player player player player player ";
	  grid-template-columns: 1fr repeat(3, 1fr) 2fr 0px;
	  grid-template-rows: calc(100vh - 72px) 72px;
	}
	.queue{

	}
  </style>
<style is:global>
	
	html {
		font-family: system-ui, sans-serif;
		background: #242423;
		background-size: 224px;
	}
	
</style>
